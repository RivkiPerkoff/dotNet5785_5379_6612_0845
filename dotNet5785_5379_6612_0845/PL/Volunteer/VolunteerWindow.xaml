<Window x:Class="PL.Volunteer.VolunteerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:bo="clr-namespace:BL.BO;assembly=BL"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="VolunteerWindow" Height="752" Width="400"
        Background="#FAFAFA"
        FontFamily="Segoe UI"
        FontSize="14"
        >

    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="RoleCollection">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bo:Role"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="DistanceTypeCollection">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bo:DistanceType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Style for Labels -->
        <Style TargetType="Label">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>

        <!-- Style for TextBoxes -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Margin" Value="0,3,0,8"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Local"/>
            <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local"/>
        </Style>

        <!-- Style for PasswordBox -->
        <Style TargetType="PasswordBox">
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Margin" Value="0,3,0,8"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- Style for ComboBox -->
        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Margin" Value="0,3,0,8"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Style for CheckBox -->
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Style for Button -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#2E86C1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="BorderBrush" Value="#2874A6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5499C7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#21618C"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#CCCCCC"/>
                                <Setter Property="BorderBrush" Value="#AAAAAA"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="10" DataContext="{Binding CurrentVolunteer}">
        <Grid.RowDefinitions>
            <!-- שורות -->
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- VolunteerId (read-only) -->
        <Label Grid.Row="0" Grid.Column="0" Content="Volunteer Id:"/>
        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding VolunteerId}" VerticalAlignment="Center" Foreground="#555555" FontWeight="SemiBold"/>

        <!-- Name -->
        <Label Grid.Row="1" Grid.Column="0" Content="Name:"/>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- PhoneNumber -->
        <Label Grid.Row="2" Grid.Column="0" Content="Phone Number:"/>
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- Email -->
        <Label Grid.Row="3" Grid.Column="0" Content="Email:"/>
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding EmailOfVolunteer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


        <Label Grid.Row="4" Grid.Column="0" Content="Password:"/>

        <PasswordBox Grid.Row="4" Grid.Column="1" PasswordChanged="PasswordBox_PasswordChanged"/>
        <Button Grid.Row="4" Content="👁" Width="21" Margin="196,4,0,6" Click="ShowPassword_Click" Grid.Column="1" HorizontalAlignment="Left"/>

        <!-- Address -->
        <Label Grid.Row="5" Grid.Column="0" Content="Address:"/>
        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding AddressVolunteer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- Latitude -->
        <Label Grid.Row="6" Grid.Column="0" Content="Latitude:"/>
        <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding VolunteerLatitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- Longitude -->
        <Label Grid.Row="7" Grid.Column="0" Content="Longitude:"/>
        <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding VolunteerLongitude, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- IsAvailable -->
        <Label Grid.Row="8" Grid.Column="0" Content="Is Available:"/>
        <CheckBox Grid.Row="8" Grid.Column="1" IsChecked="{Binding IsAvailable, Mode=TwoWay}"/>

        <!-- Max Distance -->
        <Label Grid.Row="9" Grid.Column="0" Content="Max Distance for Calls:"/>
        <TextBox Grid.Row="9" Grid.Column="1" Text="{Binding MaximumDistanceForReceivingCall, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- Role -->
        <Label Grid.Row="10" Grid.Column="0" Content="Role:"/>
        <ComboBox Grid.Row="10" Grid.Column="1" 
                  ItemsSource="{Binding Source={StaticResource RoleCollection}}"
                  SelectedItem="{Binding Role, Mode=TwoWay}"/>

        <!-- DistanceType -->
        <Label Grid.Row="11" Grid.Column="0" Content="Distance Type:"/>
        <ComboBox Grid.Row="11" Grid.Column="1"
                  ItemsSource="{Binding Source={StaticResource DistanceTypeCollection}}"
                  SelectedItem="{Binding DistanceType, Mode=TwoWay}"/>

        <!-- TotalCallsHandled -->
        <Label Grid.Row="12" Grid.Column="0" Content="Total Calls Handled:"/>
        <TextBox Grid.Row="12" Grid.Column="1" Text="{Binding TotalCallsHandled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- TotalCallsCanceled -->
        <Label Grid.Row="13" Grid.Column="0" Content="Total Calls Canceled:"/>
        <TextBox Grid.Row="13" Grid.Column="1" Text="{Binding TotalCallsCanceled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- SelectedAndExpiredCalls -->
        <Label Grid.Row="14" Grid.Column="0" Content="Selected and Expired Calls:"/>
        <TextBox Grid.Row="14" Grid.Column="1" Text="{Binding SelectedAndExpiredCalls, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

        <!-- Add / Update button -->
        <Button Grid.Row="14" Margin="5,59,0,24"
                Content="{Binding ButtonText, RelativeSource={RelativeSource AncestorType=Window}}"
                Click="btnAddUpdate_Click" HorizontalAlignment="Left" Grid.Column="1"/>
    </Grid>

</Window>
